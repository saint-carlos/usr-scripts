#!/bin/bash

source "$(dirname $BASH_SOURCE)/config_allvars.sh" "$1"

PROJLINE="generated by $PROJECT"

make_temp_filename()
{
	echo "${1}.tmp.${PROJECT}"
}

make_backup_filename()
{
	echo "${1}.bak.${PROJECT}"
}

ensure_dir()
{
	mkdir -p $(dirname "$1")
}

mkbackup()
{
	local FILE="$1"
	local BACKUP_FILE=$(make_backup_filename "$FILE")
	if [ -f "$BACKUP_FILE" ]; then
		echo "cannot backup $FILE" >&2
		exit 2
	fi
	if [ -f "$FILE" ]; then
		cp "$FILE" "$BACKUP_FILE" || return 1
		chmod --reference="$FILE" "$BACKUP_FILE" || return 1
	fi
}

rmbackup()
{
	local FILE="$1"
	local BACKUP_FILE="${FILE}.bak.${PROJECT}"
	rm -f "$BACKUP_FILE"
}

restore_backup()
{
	local FILE=$1
	local BACKUP_FILE=$(make_backup_filename $FILE)
	if [ -f "$BACKUP_FILE" ]; then
		mv -f "$BACKUP_FILE" "$FILE" || return 1
	fi
}

add_projline()
{
	local FILE="$1"
	local LINE="$2"
	local CMT_PRE="$3"
	local CMT_POST="$4"
	ensure_dir "$FILE" || return 1
	echo "$LINE $CMT_PRE $PROJLINE $CMT_POST" >> "$FILE"
}

remove_projline()
{
	local FILE="$1"
	local TMP_FILE=$(make_temp_filename $FILE)
	local SEARCH_TERM="$PROJLINE"
	test -f "$FILE" || return 0
	if grep -v "$SEARCH_TERM" "$FILE" > "$TMP_FILE"; then
		mv "$TMP_FILE" "$FILE" || return 1
	else
		rm -f "$FILE" "$TMP_FILE" || return 1
	fi
}

mksource()
{
	local CMD="$1"
	local SRC="$2"
	local DST="$3"
	local CMT_PRE="$4"
	local CMT_POST="$5"
	add_projline "$DST" "$CMD $SRC" "$CMT_PRE" "$CMT_POST"
}

rmsource()
{
	remove_projline "$@"
}

safe_replace()
{
	local DST="$1"
	shift
	mkbackup "$DST" || return 1
	ensure_dir "$DST" || return 1
	"${@/@@@/$DST}"
}

safe_edit()
{
	local DST="$1"
	shift
	mkbackup "$DST" || return 1
	ensure_dir "$DST" || return 1
	"${@/@@@/$DST}" || return 1
	rmbackup "$DST"
}

install_optional_dir()
{
	mkdir -p "$@"
}

uninstall_optional_dir()
{
	rmdir --ignore-fail-on-non-empty "$@" || true
}
