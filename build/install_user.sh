#!/bin/bash -xe

backup()
{
	FILE="$1"
	BACKUP_FILE=$(make_backup_file "$FILE")
	if [ -f "$BACKUP_FILE" ]; then
		echo "cannot backup $FILE" >&2
		exit 2
	fi
	if [ -f "$FILE" ]; then
		cp "$FILE" "$BACKUP_FILE"
	fi
}

mksource()
{
	CMD="$1"
	SRC="$2"
	DST="$3"
	CMT_PRE="$4"
	CMT_POST="$5"

	echo "$CMD $SRC $CMT_PRE generated by $PROJECT $CMT_POST" >> "$DST"
}

rmbackup()
{
	FILE="$1"
	BACKUP_FILE="${FILE}.bak.${PROJECT}"
	rm -f "$BACKUP_FILE"
}

[ $# -eq 1 ] || exit 1

PARAMS_FILE="$1"
source "$PARAMS_FILE"
source "$(dirname $BASH_SOURCE)/common.sh"
test -d "$CONFIG_ETC" || exit 1

backup ~/.bashrc
mksource 'source' "$CONFIG_ETC/bashrc" ~/.bashrc '#'
rmbackup ~/.bashrc

backup ~/.vimrc
mksource 'source' "$CONFIG_ETC/vimrc" ~/.vimrc '"'
rmbackup ~/.vimrc
if [ -n "$(ls -A "$CONFIG_LIB/vim/doc")" ]; then
	vim_exec helptags "$CONFIG_LIB/vim/doc" # generate doc tags
fi

backup ~/.gitconfig
ln -sf "$CONFIG_ETC/gitconfig" ~/.gitconfig

backup ~/.screenrc
mksource 'source' "$CONFIG_ETC/screenrc" ~/.screenrc '#'
rmbackup ~/.screenrc

backup ~/.colordiffrc
ln -sf "$CONFIG_ETC/colordiffrc" ~/.colordiffrc

if $CONFIG_DESKTOP; then
	test -d "$CONFIG_SHARE" || exit 1

	backup ~/.Xdefaults
	mksource '#include' "\"$CONFIG_ETC/xdefaults\"" ~/.Xdefaults '/*' '*/'
	rmbackup ~/.Xdefaults

	xz -d "$CONFIG_SHARE/hebrew.txt.xz"
fi

if [ $UID -eq 0 ]; then
	backup /etc/rsyslog.conf
	ln -sf  "$CONFIG_ETC/rsyslog.conf" /etc/rsyslog.conf
fi
