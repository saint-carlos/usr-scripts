#!/bin/bash

__LS_FLAGS="-Fh"
__COREUTILS_FLAGS="-v"

alias size='du -hs'
alias df='df -h'
alias lsd='ls -d'
alias lld='ll -d'
alias lla='ll -A'
alias tree='tree -CshF --dirsfirst'

# processes
alias psx='ps -ef | less'
cmd_exists htop && alias top='htop'
cmd_exists vim && alias vi='vim'

export LESS="-MR" # default LESS configuration

WORKSPACE=WORKSPACE_PLACEHOLDER
for REPO_ROOT in "$WORKSPACE" REPO_ROOT_LIST_PLACEHOLDER; do
	if [ -d "$REPO_ROOT" ]; then
		REPOSITORY_ROOTS="$REPOSITORY_ROOTS $REPO_ROOT"
	fi
done
export REPOSITORY_ROOTS

__get_working_copy()
{
	if [ $# -eq 0 ]; then
		return
	fi
	if [ $# -ne 1 ]; then
		for REPO_ROOT in $REPOSITORY_ROOTS; do
			if [ -d "$REPO_ROOT/$1" ]; then
				echo "$REPO_ROOT/$1"
				return
			fi
		done
	fi
	set `echo "$@" | sed 's/[1-9][1-9]*/ & /g'` # shorthand: a1b -> a 1 b
	REPOS=`echo "$REPOSITORY_ROOTS " | sed 's|^ *||; s| |/* |g'` # append /* to repos
	LIST=`\ls -u1d $REPOS` # list by access time from most recent
	for ITEM in "$@"; do
		LIST=`echo "$LIST" | \grep -i /[^/]*$ITEM[^/]*$` # grep the basename
	done
	echo "$LIST" | sed 1q
}

__jump_working_copy()
{
	cd `__get_working_copy $@`
}

# 'j' jumps around the user's working directoy using short mnemonics
alias j="__jump_working_copy"

__set_prompt()
{
	STATUS=$? # must be first line ever of this function

	GIT_LOCATION=""
	GIT_REPO=$(git rev-parse --show-toplevel 2>/dev/null)
	if [ -n "$GIT_REPO" ]; then
		GIT_REPO=$(basename $GIT_REPO)
		GIT_BRANCH=$(__git_ps1 "%s" 2>/dev/null)
		GIT_PREFIX=$(git rev-parse --show-prefix)
		GIT_LOCATION="${GIT_REPO}[${GIT_BRANCH}]/${GIT_PREFIX}"
	fi

	STATUS_COLOR="${!PROMPT_COLOR}"
	case $STATUS in
		0) STATUS_DESC="" ;;
		130) STATUS_DESC="INT" ;;
		131) STATUS_DESC="QUIT" ;;
		141) STATUS_DESC="PIPE" ;;
		148) STATUS_DESC="STP" ;;
		*) STATUS_DESC="${STATUS}"; STATUS_COLOR=${__RED} ;;
	esac
	if [ -n "$STATUS_DESC" ]; then
		STATUS_DESC=$(printf " ${STATUS_COLOR}(${STATUS_DESC})${PROMPT_COLOR}")
	fi

	# my shell ignores the return value of this function rather than
	# put it in $?, but i don't know about other shells
	return $STATUS
}
PROMPT_COMMAND=__set_prompt
PS1='\! \D{%y-%m-%d %T} \u@\h:${GIT_LOCATION:-\w}${STATUS_DESC}\$ '

# more informative trace when debugging bash scripts
export PS4='+ $$:${BASH_SOURCE}:${BASH_LINENO}:${FUNCNAME}: '

# don't check mail
unset MAIL MAILCHECK MAILPATH
