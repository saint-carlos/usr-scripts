#!/bin/bash

_SYS_COMMANDS=`sys -h | sed 1,3d | grep -w sys | cut -s -d: -f1 | cut '-d ' -f2 | tr '\n' ' '`
complete -W "$_SYS_COMMANDS" sys 2>/dev/null

complete -F _make build

complete -F _command gui

_git_make_patchset()
{
	if [ "$prev" = "-o" ]; then
		COMPREPLY=($(compgen -d -- "$cur"))
	elif [[ "$cur" =~ ^- ]]; then
		GETOPT=""
		COMPREPLY=()
		for OPT in h p r v s o e; do
			if [ "$cur" = "-$OPT" ]; then
				COMPREPLY=("$cur")
				return
			fi
			COMPREPLY+=("-$OPT")
			GETOPT+=$OPT
		done
	
		ALL_FORMATTED=$(echo "${COMPREPLY[@]}" | tr ' ' '\n' | sort)
		OPT_FORMATTED=$(getopt -o $GETOPT -- ${words[@]} | tr ' ' '\n' | sort)
		COMPREPLY=($(comm -23 <(echo "$ALL_FORMATTED") <(echo "$OPT_FORMATTED")))
	else
		for ((__i=$((${#words[@]})); __i >= 2; __i--)); do
			if [[ "${words[__i]}" =~ ^- ]]; then
				[[ pvso =~ ${words[__i]:1:1} ]] && ((__i++))
				break
			fi
		done
		__ARG=$((cword - __i))
		case $__ARG in
			1|2) __gitcomp_nl "$(__git_refs)" ;;
			3) __gitcomp_nl "$(__git_remotes)" ;;
		esac
	fi
}

_git_push_rewrite()
{
	if [[ "$cur" =~ ^- ]]; then
		GETOPT=""
		COMPREPLY=()
		for OPT in h v c; do
			if [ "$cur" = "-$OPT" ]; then
				COMPREPLY=("$cur")
				return
			fi
			COMPREPLY+=("-$OPT")
			GETOPT+=$OPT
		done

		ALL_FORMATTED=$(echo "${COMPREPLY[@]}" | tr ' ' '\n' | sort)
		OPT_FORMATTED=$(getopt -o $GETOPT -- ${words[@]} | tr ' ' '\n' | sort)
		COMPREPLY=($(comm -23 <(echo "$ALL_FORMATTED") <(echo "$OPT_FORMATTED")))
	else
		for ((__i=$((${#words[@]})); __i >= 2; __i--)); do
			[[ "${words[__i]}" =~ ^- ]] && break
		done
		__ARG=$((cword - __i))
		case "$__ARG,$cur" in
			1,*) __gitcomp_nl "$(__git_remotes)" ;;
			2,*:*) __HEADS="$(git ls-remote --heads "$prev" | \
					cut -f2- | cut -d/ -f3-)"
				__gitcomp_nl "$__HEADS" "" "${cur#*:}"
				;;
			2,*) __gitcomp_nl "$(__git_refs)" ;;
		esac
	fi
}

_git_diff_diff()
{
	_git_diff "$@"
}

_git_diff_log()
{
	_git_diff "$@"
}

_git_alog()
{
	_git_log "$@"
}

_cb()
{
	local CUR_WORD="${COMP_WORDS[COMP_CWORD]}"
	if [[ "$CUR_WORD" =~ ^- ]]; then
		COMPREPLY=( $(compgen -W "-o -i -a -x -f -h -l" -- "$CUR_WORD") )
	elif [[ "${COMP_WORDS[COMP_CWORD - 1]}" =~ ^-.*x ]]; then
		_command cb "$CUR_WORD" "${COMP_WORDS[COMP_CWORD - 1]}"
	else
		COMPREPLY=()
	fi
}
complete -F _cb -o default cb

__external_root_executable()
{
	[ "$COMP_CWORD" -eq 1 ] || return 1
	local COMPS=($(compgen -f -- $1))
	COMPREPLY=()
	local i=0 F HAS_EXEC=false
	for F in "${COMPS[@]}"; do
		if [ -f "$F" ] && # regular file
			[ "$(stat -c %u "$F")" = 0 ] && # owned by root
			(( 0$(stat -c %a "$F") & 0100 )); # executable by owner
		then
			HAS_EXEC=true
			COMPREPLY+=("$F")
		elif [ -d $F ]; then
			COMPREPLY+=("$F/")
		fi
	done
	$HAS_EXEC
}

_root_command()
{
	local PATH="$PATH:/sbin:/usr/sbin:/usr/local/sbin"
	local root_command=$1
	__external_root_executable $2 && return
	_command $1 $2 $3
}

_vbox()
{
	COMPREPLY=( $(compgen -W "$(vm -l)" -- "$2") )
}
complete -F _vbox vm

_mw()
{
	if [ "${#2}" -lt 3 ]; then
		return
	fi
	COMPREPLY=( $(compgen -W "$(grep "^${2}" CONFIG_LTR_DICTIONARIES)" -- "$2") )
}
complete -F _mw mw
