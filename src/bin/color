#!/bin/bash

# AUTHOR:	(c) idank
# VERSION:	1.0
# LICENSE:	GPL (http://www.gnu.org/licenses/gpl.html)
# REQUIRES: none
# NAME:		color
# DESCRIPTION: output stdin to stdout, in color

PROGRAM=$(basename $0)
DESCRIPTION="output stdin to stdout, in color."
PARAMS="color"
OPTIONS="[-h]"
ETC=CONFIG_ETC

usage()
{
	[ $1 -ne 0 ] && exec >&2

	cat << EOF
$PROGRAM - $DESCRIPTION
usage:
$PROGRAM $OPTIONS $PARAMS
printing is line-buffered.

options:
-h	help: show this help message and exit.

exit status:
255	bad arguments
otherwise it is the same as the given command.
EOF

	exit $1
}

while getopts h OPTION; do
	case OPTION in
		h) usage 0 ;;
		\?) usage 255 ;;
	esac
done
shift $((OPTIND - 1))

[ $# -eq 1 ] || usage 255

source "$ETC/colorsrc"

# the simplistic implementation would be
# __color_seq <color>; cat; __color_seq normal
# however, we only want to colorize one stream - our stdout. other streams may
# be intermingled and multiplexed to the terminal. nothing sophisticated is
# implemented at the moment, but a good approximation is that every line
# belongs to one stream, so we color our output line-by-line.
sed "s/^.*$/$(__color_seq "$1")&$(__color_seq normal)/"
