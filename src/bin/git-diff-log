#!/bin/bash

#!/bin/bash

PROGRAM=$(basename $0)
DESCRIPTION="diff between logs"
PARAMS="revision-range revision-range"
OPTIONS="[-h]"

usage()
{
	[ $1 -ne 0 ] && exec >&2

	cat << EOF
$PROGRAM - $DESCRIPTION
usage:
$PROGRAM $OPTIONS $PARAMS
revision-range can be a single commit.

options:
-h	help: show this help message and exit.

exit status:
254	arguments have no common base
255	bad arguments
otherwise same as vimdiff
EOF
    exit $1
}

while getopts h OPTION; do
	case $OPTION in
		h) usage 0 ;;
		\?) usage 255 ;;
	esac
done
shift $((OPTIND - 1))
[ $# -eq 2 ] || usage 255
FROM_BASE=0
TO_BASE=0
[[ $1 =~ \.\. ]] && FROM_BASE=1
[[ $2 =~ \.\. ]] && TO_BASE=1
(( (FROM_BASE + TO_BASE) % 2 == 0 )) || usage 255

if [ $FROM_BASE -ne 1 ] ; then
	BASE=$(git merge-base $1 $2)
	if [ $? -ne 0 ] ; then
		errcho "'$1' and '$2' don't seem to have common base!"
		exit 254
	fi
	FROM_BASE="${BASE}^.."
	TO_BASE="${BASE}^.."
else
	FROM_BASE=""
	TO_BASE=""
fi

exec vimdiff -c 'set diffexpr=GitDiffLog()' <(git log "${FROM_BASE}$1") <(git log "${TO_BASE}$2")
