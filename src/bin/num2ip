#!/bin/bash

# AUTHOR:	(c) idank
# VERSION:	1.0
# LICENSE:	GPL (http://www.gnu.org/licenses/gpl.html)
# REQUIRES: 
# NAME:		Num To IP
# DESCRIPTION:	convert a number to an IP address

PROGRAM=`basename $0`
DESCRIPTION="convert a number to an IPv4 address"
PARAMS="number..."
OPTIONS="[-hn]"

usage()
{
	[ $1 -ne 0 ] && exec >&2

	cat << EOF
$PROGRAM - $DESCRIPTION
usage:
$PROGRAM $OPTIONS $PARAMS
number can be decimal, hexadecimal (prefixed with 0x), octal (prefixed with 0) or binary (prefixed with 0b).

options:
-h	help: show this help message and exit.
-n	network order: convert the input from host order to network order before formatting.

exit status:
0	if all arguments are OK
1	if some arguments are bad
EOF

    exit $1
}

NET_ORDER=false
while getopts nh option; do
	case $option in
		h) usage 0 ;;
		n) NET_ORDER=true ;;
		\?) usage 1 ;;
	esac
done
shift `expr $OPTIND - 1`

SEPARATOR=""
while [ $# -ne 0 ]; do
	NUM="$1"
	if $NET_ORDER; then
		NUM=`hton -4 "$NUM"`
	fi
	printf "%s%s.%s.%s.%s%s" "${SEPARATOR}" "$((NUM >> 24))" "$(( (NUM >> 16) & 0xff ))" "$(( (NUM >> 8) & 0xff ))" "$((NUM & 0xff))" 
	SEPARATOR=" "
	shift
done
echo
