#!/bin/bash

PROGRAM=`basename $0`
DESCRIPTION="get process info by part of its name."
PARAMS="string ..."
OPTIONS="[-hnd] [-o options]"

usage()
{
	[ $1 -ne 0 ] && exec >&2

	cat << EOF
$PROGRAM - $DESCRIPTION
usage:
$PROGRAM $OPTIONS $PARAMS

options:
-h
	help: show this help message and exit.
-n
	no header: do not show the table header.
-o options
	options: pass options to grep. for example: "$PROGRAM -o iw" will call "grep -iw". if more than one string is given, this option is ignored.
-d
	D state: list processes in state D (uninterruptible sleep)

exit status:
0	all OK
1	arguments are bad
EOF

    exit $1
}

SHOW_HEADER=true
GREP_OPTIONS=""
DSTATE=false
while getopts hno:d option; do
	case ${option} in
		h) usage 0 ;;
		n) SHOW_HEADER=false ;;
		o) GREP_OPTIONS="${GREP_OPTIONS} -${OPTARG}" ;;
		d) DSTATE=true ;;
		\?) usage 1 ;;
	esac
done
shift `expr $OPTIND - 1`

if supported -m 1 grep "--color=auto" .; then
	GREP_OPTIONS="$GREP_OPTIONS --color=auto"
fi

if $DSTATE; then
	AWKCMD='{ if ($5 ~ ".*D.*") print }'
	DSTATE_FILTER="| awk '$AWKCMD'"
else
	DSTATE_FILTER=""
fi

filter_processes()
{
	case $# in
		0) cat;;
		1) grep $GREP_OPTIONS "$1";;
		*) mfilter "$@";;
	esac
}

PS_COMMAND='ps -e -o pid,ppid,user,flags,stat,wchan,tty,start,cmd -ww'

$SHOW_HEADER && $PS_COMMAND | sed '1q'
PROCESSES=`$PS_COMMAND | grep -v " $$ "`
echo "$PROCESSES" | eval sed 1d "$DSTATE_FILTER" | filter_processes "$@"
exit 0
