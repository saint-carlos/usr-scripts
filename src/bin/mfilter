#!/bin/bash

declare -r PROGRAM=$(basename $0)
declare -r DESCRIPTION="multi filter: logical OR between greps"
declare -r PARAMS="expression..."
declare -r OPTIONS="[-voahi]"

usage()
{
	[ $1 -ne 0 ] && exec >&2

	cat << EOF
$PROGRAM - $DESCRIPTION
usage:
$PROGRAM $OPTIONS $PARAMS
search for any of 'expression' and print out the line the expression is in. input is taken from standard input.

options:
-h	help: show this help message and exit.
-o	or: print the input line if it contains any of the expressions (default).
-a	and: print the input line if it contains all of the expressions.
-v	inverse: print out lines not confirming to the search terms.
-i	ignore case: ignore case in searches, as in grep -i.

exit status:
1	arguments are bad
otherwise, it is return value from 'awk' if the search expression is illegal
EOF

	exit $1
}

make_junctions()
{
	printf "\$0 ~ /$1/"
	shift 1
	for x in "$@"; do
		printf " ${JUNCTION_OPERATOR} \$0 ~ /$x/"
	done
}

main()
{
	if [ $# -eq 0 ]; then
		exec cat
	else
		AWK_SCRIPT="$BEGIN { if ( $CRITERIA_OPERATOR ( $(make_junctions "$@") ) ) print }"
		exec awk "$AWK_SCRIPT"
	fi
}

declare CRITERIA_OPERATOR=""
declare JUNCTION_OPERATOR="||"
declare BEGIN=""
while getopts voahi OPTION; do
	case $OPTION in
		h) usage 0 ;;
		o) JUNCTION_OPERATOR="||" ;;
		a) JUNCTION_OPERATOR="&&" ;;
		v) CRITERIA_OPERATOR="!" ;;
		i) BEGIN='BEGIN { IGNORECASE=1 }' ;;
		\?) usage 1 ;;
	esac
done
shift $((OPTIND - 1))

main "$@"
