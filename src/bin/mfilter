#!/usr/bin/env bash

declare -r PROGRAM=$(basename $0)
declare -r DESCRIPTION="multi filter: logical OR between greps"
declare -r PARAMS="expression..."
declare -r OPTIONS="[-voahi]"

usage()
{
	[ $1 -ne 0 ] && exec >&2

	cat << EOF
$PROGRAM - $DESCRIPTION
usage:
$PROGRAM $OPTIONS $PARAMS
search for any of 'expression' and print out the line the expression is in. input is taken from standard input.

options:
-h	help: show this help message and exit.
-o	or: print the input line if it contains any of the expressions (default).
-a	and: print the input line if it contains all of the expressions.
-v	inverse: print out lines not confirming to the search terms.
-i	ignore case: ignore case in searches, as in grep -i.

exit status:
1	arguments are bad
otherwise, it is return value from 'awk' if the search expression is illegal
EOF

	exit $1
}

filter()
{
	local -r POSITIVE="$1"
	local -r DISJUNCTION="$2"
	local -r IGNORE_CASE="$3"
	shift 3

	if [ $# -eq 0 ]; then
		exec cat
	fi

	local SUBEXPR_PREFIX='(?=.*'
	local SUBEXPR_SUFFIX='.*)'
	local SUBEXPR_JOIN=''
	local GREP_ARGS=("--perl-regexp")
	if $DISJUNCTION; then
		SUBEXPR_PREFIX=''
		SUBEXPR_SUFFIX=''
		SUBEXPR_JOIN='|'
	fi
	if ! $POSITIVE; then
		GREP_ARGS+=("-v")
	fi
	if $IGNORE_CASE; then
		GREP_ARGS+=("-i")
	fi


	local GREP_EXPR=""
	local JOIN=""
	local EXPR
	for EXPR in "$@"; do
		GREP_EXPR+="${JOIN}${SUBEXPR_PREFIX}${EXPR}${SUBEXPR_SUFFIX}"
		JOIN="${SUBEXPR_JOIN}"
	done

	grep "${GREP_ARGS[@]}" "$GREP_EXPR"
}

main()
{
	local POSITIVE=true
	local DISJUNCTION=true
	local IGNORE_CASE=false

	while getopts voahi OPTION; do
		case $OPTION in
			h) usage 0 ;;
			o) DISJUNCTION=true ;;
			a) DISJUNCTION=false ;;
			v) POSITIVE=false ;;
			i) IGNORE_CASE=true ;;
			\?) usage 1 ;;
		esac
	done
	shift $((OPTIND - 1))

	filter "$POSITIVE" "$DISJUNCTION" "$IGNORE_CASE" "$@"
}

main "$@"
