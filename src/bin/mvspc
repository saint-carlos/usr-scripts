#! /usr/bin/env bash
# #############################################################################

       NAME_=$(basename $0)
       HTML_="remove spaces in files"
    PURPOSE_="substitute space in a file and dir name with an _"
   SYNOPSIS_="$NAME_ [-vhl] <file> [file...]"
   REQUIRES_="standard GNU commands"
    VERSION_="1.4"
       DATE_="1998-11-20; last update: 2004-02-08"
     AUTHOR_="Dawid Michalczyk <dm@eonworks.com>"
        URL_="www.comp.eonworks.com"
   CATEGORY_="file"
   PLATFORM_="Linux"
      SHELL_="bash"
 DISTRIBUTE_="yes"

# #############################################################################
# This program is distributed under the terms of the GNU General Public License

usage () {

errcho "$NAME_ $VERSION_ - $PURPOSE_
Usage: $SYNOPSIS_
Requires: $REQUIRES_
Options:
     -v, verbose
     -h, usage and options (this help)"
    exit 1
}

die()
{
	RC=$1
	shift
	errcho "$*"
	exit $RC
}

[ $# -eq 0 ] && die 1 "missing argument, type $NAME_ -h for help"

VERBOSE=false
while getopts vhlr OPTION; do
	case $OPTION in
		v) VERBOSE=true ;;
		h) usage ;;
		\?) die 1 "invalid argument, type $NAME_ -h for help" ;;
	esac
done
shift $((OPTIND - 1))
    
# main execution
for F in "$@"; do
	DIRNAME="$(dirname "${F}")"
	BASENAME="$(basename "${F}")"
	NEW_BASENAME="${BASENAME// /_}"
	if [ "${NEW_BASENAME}" = "${BASENAME}" ]; then
		continue # no spaces in file name
	fi
	NEWF="${DIRNAME}/${NEW_BASENAME}"
	if [ -e "$NEWF" ]; then
		errcho "${NAME_}: not renaming '$F' - '$NEWF' already exist" && continue
	else
		$VERBOSE && echo "renaming: '$F' -> '$NEWF'"
		mv -- "$F" "$NEWF"
	fi
done
