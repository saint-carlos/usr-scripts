#!/usr/bin/env bash

declare -r PROGRAM=$(basename $0)
declare -r DESCRIPTION="word-wrapping less"
declare -r PARAMS="[less-args...]"
declare -r OPTIONS="[-hg] | [-w width] [-- less-flags...]"
declare -r TTY_COLUMNS="$(tput cols)"
declare WRAP_COLUMNS="$TTY_COLUMNS"

set -o pipefail -o errexit -o nounset

usage()
{
	[ $1 -ne 0 ] && exec >&2

	cat << EOF
$PROGRAM - $DESCRIPTION
usage:
$PROGRAM $OPTIONS $PARAMS

folds & pages input from stdin.

options:
-h	help: show this help message and exit.
-g	debug: print diagnostics.
-w	width: wrap at a specific column width. 0 means don't wrap.
EOF

	exit $1
}

diagnostics()
{
	echo "current TTY has $TTY_COLUMNS columns."
	if cmd_exists lesspipe; then
		echo "lesspipe: '$(command -v lesspipe)'."
	else
		echo "lesspipe not present."
	fi
	if [ "${WRAP_COLUMNS}" -gt 0 ]; then
		echo "folding by width of $WRAP_COLUMNS columns."
	else
		echo "not folding."
	fi
}

pipe()
{
	if [ -r "$1" ] && cmd_exists lesspipe; then
		lesspipe "$@" | ifne -n cat "$@"
	else
		cat "$@"
	fi
}

wrap()
{
	if [ "${WRAP_COLUMNS}" -gt 0 ]; then
		fold --spaces --width $WRAP_COLUMNS "$@"
	else
		cat "$@"
	fi
}

lessopen()
{
	pipe "$@" | wrap
}

run()
{
	export LESSOPEN="||- bash $0 -L -w $WRAP_COLUMNS %s"
	exec less "$@"
}

declare MODE=run
while getopts hgw:L OPTION; do
	case $OPTION in
		h) usage 0 ;;
		g) MODE=diagnostics ;;
		w) WRAP_COLUMNS="$OPTARG" ;;
		L) MODE=lessopen ;;
		-) ARGS+=("-$OPTION"); if [[ -v OPTARG ]]; then ARGS+=("$OPTARG"); fi ;;
		\?) usage 2 ;;
	esac
done
shift $((OPTIND - 1))

"$MODE" "$@" "${ARGS[@]}"
