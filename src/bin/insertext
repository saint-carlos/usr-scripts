#! /bin/bash
# #############################################################################

       NAME_=$(basename $0)
       HTML_="put text into file"
    PURPOSE_="insert text file into another file at line n"
   SYNOPSIS_="$NAME_ [-h] <n> <text_file_to_insert> <file> [<file>..]"
   REQUIRES_="standard GNU commands"
    VERSION_="1.1"
       DATE_="2001-06-23; last update: 2005-03-30"
     AUTHOR_="Dawid Michalczyk <dm@eonworks.com>"
        URL_="www.comp.eonworks.com"
   CATEGORY_="text"
   PLATFORM_="Linux"
      SHELL_="bash"
 DISTRIBUTE_="yes"

# #############################################################################
# This program is distributed under the terms of the GNU General Public License

usage() {

errcho "$NAME_ $VERSION_ - $PURPOSE_
Usage: $SYNOPSIS_
Requires: $REQUIRES_
Options:
     <n>, an integer referring to line number at which to insert the text file
     <text_file_to_insert>, the text file to insert
     <file>, the text file to insert into
     -h, usage and options (this help)"
    exit 1
}

die()
{
	RC=$1
	shift
	errcho "$*"
	exit $RC
}

# tmp files setup
TMP1=$(mktemp)
TMP2=$(mktemp)

# signal trapping and tmp file removal
trap 'rm -f "$TMP1" "$TMP2" >/dev/null 2>&1' 0
trap "exit 1" 1 2 3 15

# enabling extended globbing
shopt -s extglob

# option handling
case "$1" in
	-h) usage ;;
	+([0-9])) : ;;
	*) die 1 "invalid argument, type $NAME_ -h for help" ;;
esac
n=$1
[ $# -ge 3 ] || die 1 "missing argument, only has $#"
[ -e $2 ] || die 1 "file $2 does not exist"
INSERT=$2
shift 2

for A in "$@"; do
	[ -f "$A" ] || errcho "$A does not exist or is not a file"
	# in case we want to insert at line 1
	if [ $n -eq 1 ];then
		touch "$TMP1"
		sed -n ''$n',$p' $A > "$TMP2"
		cat "$TMP1" "$INSERT" "$TMP2" > "$A"
		continue

	fi

	((n--)) # back up one line
	sed -n '1,'$n'p' "$A" > "$TMP1"
	((n++)) # back to original n
	sed -n ''$n',$p' "$A" > "$TMP2"
	cat "$TMP1" "$INSERT" "$TMP2" > "$A"
done
