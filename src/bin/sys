#!/bin/bash

PROGRAM=$(basename $0)
DESCRIPTION="get info about the system."

usage()
{
	[ $1 -ne 0 ] && exec >&2

	cat << EOF
$PROGRAM - $DESCRIPTION
usage:
$PROGRAM -h: show this help message and exit.
$PROGRAM ip: machine IP
$PROGRAM hostname: machine hostname
$PROGRAM bits: word width (32bit/64bit)
$PROGRAM cpus: amount of logical CPUs
$PROGRAM os: operating system name
$PROGRAM version: operating system version
$PROGRAM arch: architecture
$PROGRAM platform: platform name or main feature (e.g. T1000, hugemem)

exit status:
98  bad arguments
otherwise it is the same as that of the command to execute.
EOF

    exit $1
}

die()
{
	echo "$*"
	exit 98
}

execute()
{
	test -n "$1" || die "unable to execute $1"
	test -x "`which $1 2>/dev/null`" || die "unable to execute $1"
	"$@"
}

while getopts h OPTION; do
	case $OPTION in
		h) usage 0 ;;
		\?) usage 98 ;;
	esac
done
shift $((OPTIND - 1))
[ -n "$1" ] || die "no action"

CMD="$1"
shift
case "$CMD" in
	hostname) execute hostname "$@" ;;
	cpus) execute system_cpu_count "$@" ;;
	os) uname -s | sed 's:SunOS:Solaris:g' ;;
	*)
		execute "system_${CMD}" "$@"
		;;
esac
