#!/bin/bash

PROGRAM=$(basename $0)
DESCRIPTION="capitalize first letters"
PARAMS="[file...]"
OPTIONS="[-hi]"

usage()
{
	[ $1 -ne 0 ] && exec >&2

	cat << EOF
$PROGRAM - $DESCRIPTION
usage:
$PROGRAM $OPTIONS $PARAMS

options:
-i	in-place: edit files in place
-h	help: show this help message and exit.

exit status:
255	some options are bad
otherwise it is the exit status from sed(1).
EOF

    exit $1
}

# rules:
# * only capialize all-lowercase words. if it has mixed case or numbers assume
# it's some identifier that shouldn't be touched.
# * a sentence begins with a newline or after a [.!?] and at least one space.
# * do not capialize after [:;].
# * quoted text is capitalized at the beginning of a sentence or after a colon.
# list numbering can be 1, 2, 3... or A, B, C... or a, b, c... - don't capitalize
# the latter.
# * list numbers can be denoted as "a. ", "a) ", or "(a) ".
# * some words look like "e.g." or "i.e." do not denote end of sentence - a
# sentence ends with a word without a dot in the middle.
# * text after ellipsis is not capitalized.
# * the word 'I' should be capitalized.
# * there are no one-letter sentences, except for the sentence "I.".

SENTENCE_DELIM='[\.!?]'
BREAK="[\"),-:;]"
BULLET='([[:alnum:]]?[()*#$+\-\.:][[:space:]]?)'
__WORD_END="(${BREAK}|${SENTENCE_DELIM})"
WORD_END="(${__WORD_END}?$|${__WORD_END}?[[:space:]]+|${__WORD_END}{2})"
SENTENCE_LAST_WORD='(^|[[:space:]][^\.[:space:]]+)'
SENTENCE_END="(${SENTENCE_LAST_WORD}${SENTENCE_DELIM}[[:space:]]+)"
__SENTENCE_START="((${SENTENCE_END}|^)[[:space:]]*${BULLET}*\"?)"
QUOTE_START=':[[:space:]]+"'
SENTENCE_START="(${__SENTENCE_START}|${QUOTE_START})"
CAPITALIZE_ME="([[:lower:]])"
REST_CAPPED_WORD="([[:space:]]+|[[:lower:]']+${WORD_END})"
UPPERCASE_EXP='\1\U\7\E\8'

SED_SCRIPT="
	:do
	s,${SENTENCE_START}${CAPITALIZE_ME}${REST_CAPPED_WORD},${UPPERCASE_EXP},
	t do
"

STDOUT=true
while getopts hi OPTION; do
	case $OPTION in
		h) usage 0 ;;
		i) STDOUT=false ;;
		\?) usage 255 ;;
	esac
done
shift $((OPTIND - 1))

if $STDOUT; then
	OUT=$(mktemp)
	cat "$@" > "$OUT"
	set -- "$OUT"
fi
sed -i --regexp-extended -e "$SED_SCRIPT" "$@" || exit $?
sed -i --regexp-extended 's/\<i\>/I/' "$@" || exit $?
if $STDOUT; then
	cat "$OUT"
	rm "$OUT"
fi
