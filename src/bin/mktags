#!/usr/bin/env bash

set -o pipefail -o errexit -o nounset

declare -r PROGRAM=$(basename $0)
declare -r DESCRIPTION="create tag files"
declare -r PARAMS=""
declare -r OPTIONS="[-hr]"

usage()
{
	[ $1 -ne 0 ] && exec >&2

	cat << EOF
${PROGRAM} - ${DESCRIPTION}
usage:
${PROGRAM} ${OPTIONS} ${PARAMS}

options:
-h	help: show this help message and exit.
-r	recreate: remove existing tag databases.

currently creates tags using ctags and cscope.

exit status:
0	if all arguments are OK
1	on indexing error
2	if some arguments are bad
EOF

    exit $1
}

main()
{

	declare CLEAN=false
	declare FORCE_SHELL=false
	while getopts hr OPTION; do
	    case "${OPTION}" in
		h) usage 0 ;;
		r) CLEAN=true ;;
		*) usage 2 ;;
	    esac
	done
	shift $((OPTIND - 1))

	declare -r TOPLEVEL=$(git rev-parse --show-toplevel 2> /dev/null)
	cd "${TOPLEVEL}"

	if "${CLEAN}"; then
		rm -f tags cscope.*
	fi
	if cmd_exists ctags; then
		ctags -R \
			--extra=+qf \
			--fields=+afiklmnsSzt
		ctags --list-maps \
			| sed --regexp-extended 's/ +/ /g' \
			| cut -d' ' -f2- \
			| tr ' ' '\n' \
			| xargs -L1 printf '%s "%s" ' '-o -name' \
			| xargs find . -false > cscope.files
	fi
	if cmd_exists cscope; then
		cscope -bqR || exit 1
	fi
}

main "$@"
